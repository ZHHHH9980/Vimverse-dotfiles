{
  "vim.timeout": 500,
  "vim.leader": " ",
  "vim.easymotion": true,
  // paper-like settings
  "vim.easymotionMarkerBackgroundColor": "blue",
  "vim.easymotionMarkerForegroundColorOneChar": "white",
  "vim.sneak": true,
  // "agr 指定使用某个寄存器replace | [motion] example:aw i"
  "vim.replaceWithRegister": true,
  "vim.surround": true,
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "k"],
      "after": ["<Esc>"]
    }
  ],
  // 非递归指的是remap全部恢复出厂设置
  "vim.insertModeKeyBindingsNonRecursive": [
    // im<Space> -> import
    {
      "before": ["i", "m", "<space>"],
      "after": ["i", "m", "p", "o", "r", "t"]
    },

    // co<Space> -> const
    {
      "before": ["c", "o", "<space>"],
      "after": ["c", "o", "n", "s", "t"]
    },

    // rn<Space> -> return
    {
      "before": ["r", "n", "<Space>"],
      "after": ["r", "e", "t", "u", "r", "n"]
    },

    // ex<Space>  -> export
    {
      "before": ["e", "x", "<Space>"],
      "after": ["e", "x", "p", "o", "r", "t"]
    },
    // de<Space> -> default
    {
      "before": ["d", "e", "<Space>"],
      "after": ["d", "e", "f", "a", "u", "l", "t"]
    },

    // xx.log ->  console.log(xx);
    {
      "before": [".", "l", "o", "g"],
      "after": [
        "<Esc>",
        "v",
        "^",
        "\"",
        "a",
        "d",
        "a",
        "c",
        "o",
        "n",
        "s",
        "o",
        "l",
        "e",
        ".",
        "l",
        "o",
        "g",
        "(",
        "'",
        "<Esc>",
        "\"",
        "a",
        "p",
        "l",
        "a",
        ",",
        "<Esc>",
        "\"",
        "a",
        "p"
      ]
    },

    // /nst -> need a single tag
    // it really usefull when typing React
    // example: <Tag>(input: /nst)</Tag> -> <Tag/>
    {
      "before": ["/", "n", "s", "t"],
      "after": [
        "<Esc>",
        "v",
        "T",
        "<",
        "h",
        "d",
        "l",
        "d",
        "w",
        "f",
        ">",
        "i",
        " ",
        "/"
      ]
    }
  ],   
  "vim.visualModeKeyBindings": [
    // 以下操作是在视图模式下在选中的两端快速添加,(),[],{},'',"",<>,``
    // 意为 add + ()
    // {
    //   "before": ["<leader>", "("],
    //   "after": ["c", "(", "<Esc>", "j", "\"", "a", "p"]
    // },
    // {
    //   "before": ["<leader>", "{"],
    //   "after": ["c", "{", "<Esc>", "j", "\"", "a", "p"]
    // },
    // {
    //   "before": ["<leader>", "["],
    //   "after": ["c", "[", "<Esc>", "j", "\"", "a", "p"]
    // },
    // {
    //   "before": ["<leader>", "'"],
    //   "after": ["c", "'", "'", "<Esc>", "j", "\"", "a", "p"]
    // },
    // {
    //   "before": ["<leader>", "\""],
    //   "after": ["c", "\"", "\"", "<Esc>", "j", "\"", "a", "p"]
    // },
    // {
    //   "before": ["<leader>", "<"],
    //   "after": ["c", "<", ">", "<Esc>", "j", "\"", "a", "p"]
    // },
    // {
    //   "before": ["<leader>", "`"],
    //   "after": ["c", "`", "`", "<Esc>", "j", "\"", "a", "p"]
    // }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["K"],
      "after": ["j","j","j","j","j","j","j","j","j","j","j","j"]
    },
    {
      "before": ["I"],
      "after": ["k","k","k","k","k","k","k","k","k","k","k","k"]
    },
    // R 替代 r
    {
      "before": ["R"],
      "after": ["r"]
    },
    // default go replace
    // 默认复制
    {
      "before": ["r"],
      "after": ["\"", "a", "g", "r"]
    },
    // go replace
    {
      "before": ["a", "r"],
      "after": ["\"", "a", "g", "r"]
    },

    // yank 复制
    {
      "before": ["y"],
      "after": ["\"", "a", "y"]
    },
    // delete
    {
      "before": ["d"],
      "after": ["\"", "_", "d"]
    },
    {
      "before": ["n", "d"],
      "after": ["\"", "a", "d"]
    },
    {
      "before": ["d", "d"],
      "after": ["\"", "_", "d", "d"]
    },
    {
      "before": ["n", "d", "d"],
      "after": ["\"", "a", "d", "d"]
    },

    // 跟norm模式下统一方向
    {
      "before": ["k"],
      "after": ["j"]
    },
    {
      "before": ["i"],
      "after": ["k"]
    },

    {
      "before": ["j"],
      "after": ["h"]
    },
    // v至行首 行尾
    {
      "before": ["L"],
      "after": ["$"]
    },
    {
      "before": ["J"],
      "after": ["^"]
    },
    //将o映射成i 这就能j正常使用 v o(i)
    {
      "before": ["o"],
      "after": ["i"]
    },

    // 删除的内容放入a寄存器中
    { "before": ["c"], "after": ["q", "\"", "a", "c"] },
    { "before": ["C"], "after": ["\"", "a", "C"] },
    {
      "before": ["d"],
      "after": ["\"", "_", "d"]
    },
    // 修改逻辑：
    // 1. dd c删除的内容放入a寄存器中, 也就是一般不需要使用的脏值放入a寄存器
    // 2. 输入n dd 表示 need content delete 需要delete的content
    { "before": ["c"], "after": ["\"", "a", "c"] },
    { "before": ["C"], "after": ["\"", "a", "C"] },
    { "before": ["n", "c"], "after": ["c"] },
    { "before": ["n", "C"], "after": ["C"] },
    {
      "before": ["d"],
      "after": ["\"", "_", "d"]
    },
    {
      "before": ["n", "d"],
      "after": ["\"", "a", "d"]
    },
    {
      "before": ["d", "d"],
      "after": ["\"", "_", "d", "d"]
    },
    // 放入a寄存器管理
    {
      "before": ["n", "d", "d"],
      "after": ["\"", "a", "d", "d"]
    }
  ],

  "vim.commandLineModeKeyBindingsNonRecursive": [
    // 在命令行统一插入符号
/*     {
      "before": ["J"],
      "after": ["I"]
    },
    {
      "before": ["L"],
      "after": ["A"]
    } */
  ],
  // 快捷设置相对行号和绝对行号
  "vim.normalModeKeyBindings": [
    // {
    //   "before": ["<leader>", "f"],
    //   "commands": ["<leader>", "s"]
    // },
    {
      "before": ["<leader>", "r", "n"],
      "commands": [":set relativenumber"]
    },
    {
      "before": ["<leader>", "n"],
      "commands": [":set number"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["K"],
      "after": ["j","j","j","j","j","j","j","j","j","j","j","j"]
    },
    {
      "before": ["I"],
      "after": ["k","k","k","k","k","k","k","k","k","k","k","k"]
    },
    {
      "before": ["W"],
      "commands": ["whichkey.show"]
    },
    // H -> 0 从跳转到视窗初始位置到跳转到行首
    {
      "before": ["H"],
      "after": ["0"]
    },
    // R 替代 r
    {
      "before": ["R"],
      "after": ["r"]
    },
    // default go replace
    // 复制粘贴将放入a寄存器统一管理
    // example: yiw -> riw replace the word directly
    {
      "before": ["r"],
      "after": ["\"", "a", "g", "r"]
    },
    // go replace
    {
      "before": ["b", "r"],
      "after": ["\"", "b", "g", "r"]
    },
    /* TODO: in visual mode, putting the "y", which can make the cursor
       stop in the end instead of the start 
       */
    // {
    //   "before": ["<Space>"],
    //   "after": ["a"]
    // }, 
    // {
    //   "before": ["s"],
    //   "after": ["a"]
    // },
    {
      "before": ["h"],
      "after": ["i"]
    },
    // ctrl+w 切换分屏 j -> h
    {
      "before": ["<C-w>", "j"],
      "after": ["<C-w>", "h"]
    },
    // 切换标签页
    {
      "before": ["E"],
      "after": ["g", "T"]
    },
    {
      "before": ["R"],
      "after": ["g", "t"]
    },
    // yank
    {
      "before": ["y"],
      "after": ["\"", "a", "y"]
    },
    // 修改逻辑：
    // 1. dd c删除的内容放入a寄存器中, 也就是一般不需要使用的脏值放入a寄存器
    // 2. 输入n dd 表示 need content delete 需要delete的content, 这样输入的话会剪切
    { "before": ["c"], "after": ["\"", "_", "c"] },
    { "before": ["C"], "after": ["\"", "_", "C"] },
    { "before": ["n", "c"], "after": ["\"", "a", "c"] },
    { "before": ["n", "C"], "after": ["\"", "a", "C"] },
    {
      "before": ["d"],
      "after": ["\"", "_", "d"]
    },
    {
      "before": ["n", "d"],
      "after": ["\"", "a", "d"]
    },
    {
      "before": ["d", "d"],
      "after": ["\"", "_", "d", "d"]
    },
    {
      "before": ["n", "d", "d"],
      "after": ["\"", "a", "d", "d"]
    },
    // paste default register:a
    // 统一默认寄存器:a
    {
      "before": ["p"],
      "after": ["\"", "a", "p"]
    },
    {
      // 当行尾部快速添加分号
      // 但是这里会留在末尾，看看能不能改进一下
      // 改进完成 使用mark操作
      "before": ["a", ";"],
      // mark this postion into "a"
      // use `a go back
      "after": ["m", "a", "$", "a", ";", "<Esc>", "`", "a"]
    },
    // add , at the end of the sentence
    {
      "before": ["a", ","],
      "after": ["$", "a", ","]
    },

    // add "" surrounding a word
    {
      "before": ["a", "\""],
      "after": [
        "\"",
        "a",
        "d",
        "i",
        "w",
        "i",
        "\"",
        "\"",
        "<Esc>",
        "h",
        "\"",
        "a",
        "p"
      ]
    },
    // add '' surrounding a word
    {
      "before": ["a", "'"],
      "after": [
        "\"",
        "a",
        "d",
        "i",
        "w",
        "i",
        "'",
        "'",
        "<Esc>",
        "h",
        "\"",
        "a",
        "p"
      ]
    },
    // add `` surrounding a word especially useful in markdown
    {
      "before": ["a", "`"],
      "after": [
        "\"",
        "a",
        "d",
        "i",
        "w",
        "i",
        "`",
        "`",
        "<Esc>",
        "h",
        "\"",
        "a",
        "p"
      ]
    },
    // add ()  a word
    {
      "before": ["a", "("],
      "after": [
        "\"",
        "a",
        "d",
        "i",
        "w",
        "i",
        "(",
        ")",
        "<Esc>",
        "h",
        "\"",
        "a",
        "p"
      ]
    },
    {
      "before": ["a", ")"],
      "after": [
        "\"",
        "a",
        "d",
        "i",
        "w",
        "i",
        "(",
        ")",
        "<Esc>",
        "h",
        "\"",
        "a",
        "p"
      ]
    },
    // add <>  a word
    {
      "before": ["a", "<"],
      "after": [
        "\"",
        "a",
        "d",
        "i",
        "w",
        "i",
        "<",
        ">",
        "<Esc>",
        "h",
        "\"",
        "a",
        "p"
      ]
    },
    {
      "before": ["a", ">"],
      "after": [
        "\"",
        "a",
        "d",
        "i",
        "w",
        "i",
        "<",
        ">",
        "<Esc>",
        "h",
        "\"",
        "a",
        "p"
      ]
    },
    // add {} surround a word
    {
      "before": ["a", "{"],
      "after": [
        "\"",
        "a",
        "d",
        "i",
        "w",
        "i",
        "{",
        "}",
        "<Esc>",
        "h",
        "\"",
        "a",
        "p"
      ]
    },
    // add {} surround a word
    {
      "before": ["a", "}"],
      "after": [
        "\"",
        "a",
        "d",
        "i",
        "w",
        "i",
        "{",
        "}",
        "<Esc>",
        "h",
        "\"",
        "a",
        "p"
      ]
    },
    // 使用空格<space>代替a enter insert mode
    // adjust ↑↓←→
    {
      "before": ["k"],
      "after": ["j"]
    },
    {
      "before": ["i"],
      "after": ["k"]
    },

    {
      "before": ["j"],
      "after": ["h"]
    },
    // 修改行首行尾插入
    {
      "before": ["J"],
      "after": ["I"]
    },
    {
      "before": ["L"],
      "after": ["A"]
    },
    // sneak
    {
      "before": ["<leader>", "s"],
      "after": ["<leader>", "<leader>", "s"]
    },
    // 删除至行首 行尾
    {
      "before": ["d", "L"],
      "after": ["d", "$"]
    },
    {
      "before": ["d", "J"],
      "after": ["d", "^"]
    },
    /* 
      这部分复制粘贴的选择思路:
      ayy -> ap
      byy -> bp
      这样可以迅速复制多个内容，比如单词 并且一一对应 非常舒服
      仅支持a-e这么多个regsiter
      够用
      */
    // yank 复制

    // ay -> "ay
    // 直接放入 register a
    // {
    //   "before": ["a", "y"],
    //   "after": ["\"", "a", "y"]
    // },

    // by -> "by
    // 以下同理
    {
      "before": ["b", "y"],
      "after": ["\"", "b", "y"]
    },
    {
      "before": ["c", "y"],
      "after": ["\"", "c", "y"]
    },
    {
      "before": ["d", "y"],
      "after": ["\"", "d", "y"]
    },
    {
      "before": ["e", "y"],
      "after": ["\"", "e", "y"]
    },
    // paste 快捷粘贴
    {
      "before": ["a", "p"],
      "after": ["\"", "a", "p"]
    },
    // by -> "by
    // 以下同理
    {
      "before": ["b", "p"],
      "after": ["\"", "b", "p"]
    },
    {
      "before": ["c", "p"],
      "after": ["\"", "c", "p"]
    },
    {
      "before": ["d", "p"],
      "after": ["\"", "d", "p"]
    },

    {
      "before": ["e", "p"],
      "after": ["\"", "e", "p"]
    }
  ],

  "launch": {
  
    "configurations": [],  
    "compounds": []
  },
  "editor.fontSize": 20,
  "workbench.colorTheme": "Tiny Light",
  "editor.lineNumbers": "relative",
  "terminal.integrated.fontFamily": "FiraCode Nerd Font Mono", 
  "editor.fontFamily": "Fira Code",
  "editor.fontLigatures": true,
  "terminal.integrated.fontSize": 16,
  "editor.formatOnSave": true,
  // "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnPaste": true,
  "editor.defaultFormatter": "carlsirce.vscode-eden-plugin",
  "vscode-neovim.neovimExecutablePaths.darwin": "/usr/local/Cellar/neovim/0.5.0/bin/nvim",
  "whichkey.bindings": [

    {
      "key": " ",
      "name": "Commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "\t",
      "name": "Last editor",
      "type": "commands",
      "commands": [
        "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "list.select"
      ]
    },
    {
      "key": "?",
      "name": "Search keybindings",
      "type": "command",
      "command": "whichkey.searchBindings"
    },
    {
      "key": ".",
      "name": "Repeat most recent action",
      "type": "command",
      "command": "whichkey.repeatMostRecent"
    },
    {
      "key": "b",
      "name": "+Buffers/Editors",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "B",
          "name": "Show all buffers/editors in active group",
          "type": "command",
          "command": "workbench.action.showEditorsInActiveGroup"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "H",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "J",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "K",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "L",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "M",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "P",
          "name": "Paste clipboard to buffer",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardPasteAction"
          ]
        },
        {
          "key": "Y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "+Debug",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "D",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "+Errors",
      "type": "bindings",
      "bindings": [
        {
          "key": ".",
          "name": "Error transient",
          "type": "command",
          "command": "whichkey.showTransient",
          "args": "whichkey.transient.error"
        },
        {
          "key": "l",
          "name": "List errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "N",
          "name": "Previous error",
          "type": "command",
          "command": "editor.action.marker.prev"
        },
        {
          "key": "n",
          "name": "Next error",
          "type": "command",
          "command": "editor.action.marker.next"
        },
        {
          "key": "p",
          "name": "Previous error",
          "type": "command",
          "command": "editor.action.marker.prev"
        }
      ]
    },
    {
      "key": "f",
      "name": "+File",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Open file/folder",
          "type": "command",
          "command": "whichkey.openFile"
        },
        {
          "key": "n",
          "name": "New Untitled",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "w",
          "name": "Open active in new window",
          "type": "command",
          "command": "workbench.action.files.showOpenedFileInNewWindow"
        },
        {
          "key": "s",
          "name": "Save file",
          "type": "command",
          "command": "workbench.action.files.save"
        },
        {
          "key": "S",
          "name": "Save all files",
          "type": "command",
          "command": "workbench.action.files.saveAll"
        },
        {
          "key": "r",
          "name": "Open recent",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "R",
          "name": "Rename file",
          "type": "commands",
          "commands": [
            "workbench.files.action.showActiveFileInExplorer",
            "renameFile"
          ]
        },
        {
          "key": "t",
          "name": "Show tree/explorer view",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "T",
          "name": "Show active file in tree/explorer view",
          "type": "command",
          "command": "workbench.files.action.showActiveFileInExplorer"
        },
        {
          "key": "y",
          "name": "Copy path of active file",
          "type": "command",
          "command": "workbench.action.files.copyPathOfActiveFile"
        },
        {
          "key": "o",
          "name": "Open with",
          "type": "command",
          "command": "explorer.openWith"
        },
        {
          "key": "l",
          "name": "Change file language",
          "type": "command",
          "command": "workbench.action.editor.changeLanguageMode"
        },
        {
          "key": "=",
          "name": "Format file",
          "type": "command",
          "command": "editor.action.formatDocument"
        },
        {
          "key": "i",
          "name": "+Indentation",
          "type": "bindings",
          "bindings": [
            {
              "key": "i",
              "name": "Change indentation",
              "type": "command",
              "command": "changeEditorIndentation"
            },
            {
              "key": "d",
              "name": "Detect indentation",
              "type": "command",
              "command": "editor.action.detectIndentation"
            },
            {
              "key": "r",
              "name": "Reindent",
              "type": "command",
              "command": "editor.action.reindentlines"
            },
            {
              "key": "R",
              "name": "Reindent selected",
              "type": "command",
              "command": "editor.action.reindentselectedlines"
            },
            {
              "key": "t",
              "name": "Convert indentation to tabs",
              "type": "command",
              "command": "editor.action.indentationToTabs"
            },
            {
              "key": "s",
              "name": "Convert indentation to spaces",
              "type": "command",
              "command": "editor.action.indentationToSpaces"
            }
          ]
        }
      ]
    },
    {
      "key": "g",
      "name": "+Git",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Publish",
          "type": "command",
          "command": "git.publish"
        },
        {
          "key": "s",
          "name": "Status",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "i",
      "name": "+Insert",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },
    {
      "key": "p",
      "name": "+Project",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Find file in project",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "p",
          "name": "Switch project",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "t",
          "name": "Show tree/explorer view",
          "type": "command",
          "command": "workbench.view.explorer"
        }
      ]
    },
    {
      "key": "r",
      "name": "+Repeat",
      "type": "bindings",
      "bindings": [
        {
          "key": ".",
          "name": "Repeat recent actions",
          "type": "command",
          "command": "whichkey.repeatRecent"
        }
      ]
    },
    {
      "key": "s",
      "name": "+Search/Symbol",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Edit symbol",
          "type": "command",
          "command": "editor.action.rename"
        },
        {
          "key": "h",
          "name": "Highlight symbol transient",
          "type": "commands",
          "commands": [
            "editor.action.wordHighlight.trigger",
            "whichkey.showTransient"
          ],
          "args": [
            null,
            "whichkey.transient.symbol"
          ]
        },
        {
          "key": "j",
          "name": "Jump to symbol in file",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "J",
          "name": "Jump to symbol in workspace",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        },
        {
          "key": "p",
          "name": "Search in a project",
          "type": "command",
          "command": "workbench.action.findInFiles"
        },
        {
          "key": "P",
          "name": "Search in a project with a selection",
          "type": "commands",
          "commands": [
            "editor.action.addSelectionToNextFindMatch",
            "workbench.action.findInFiles"
          ]
        },
        {
          "key": "r",
          "name": "Search all references",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "R",
          "name": "Search all references in side bar",
          "type": "command",
          "command": "references-view.find"
        },
        {
          "key": "s",
          "name": "Search in current file",
          "type": "command",
          "command": "actions.find"
        }
      ]
    },
    {
      "key": "n",
      "name": "+navigation",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "t",
          "name": "Show terminal",
          "type": "command",
          "command": "workbench.action.terminal.toggleTerminal"
        }
      ]
    },
    {
      "key": "T",
      "name": "+Toggles",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Toggle find case sensitive",
          "type": "command",
          "command": "toggleFindCaseSensitive"
        },
        {
          "key": "w",
          "name": "Toggle ignore trim whitespace in diff",
          "type": "command",
          "command": "toggle.diff.ignoreTrimWhitespace"
        },
        {
          "key": "W",
          "name": "Toggle word wrap",
          "type": "command",
          "command": "editor.action.toggleWordWrap"
        }
      ]
    },
    {
      "key": "t",
      "name": "+UI toggles",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "e",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "t",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        },
        {
          "key": "z",
          "name": "Toggle zen mode",
          "type": "command",
          "command": "workbench.action.toggleZenMode"
        }
      ]
    },
    {
      "key": "w",
      "name": "+Window",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "-",
          "name": "Split editor below",
          "type": "command",
          "command": "workbench.action.splitEditorDown"
        },
        {
          "key": "/",
          "name": "Split editor right",
          "type": "command",
          "command": "workbench.action.splitEditor"
        },
        {
          "key": "s",
          "name": "Split editor below",
          "type": "command",
          "command": "workbench.action.splitEditorDown"
        },
        {
          "key": "v",
          "name": "Split editor right",
          "type": "command",
          "command": "workbench.action.splitEditor"
        },
        {
          "key": "h",
          "name": "Move editor left",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "j",
          "name": "Move editor down",
          "type": "command",
          "command": "workbench.action.focusBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor up",
          "type": "command",
          "command": "workbench.action.focusAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor right",
          "type": "command",
          "command": "workbench.action.focusNextGroup"
        },
        {
          "key": "H",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "J",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "K",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "L",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "x",
      "name": "+Text",
      "type": "bindings",
      "bindings": [
        {
          "key": "i",
          "name": "Organize Imports",
          "type": "command",
          "command": "editor.action.organizeImports"
        },
        {
          "key": "r",
          "name": "Rename symbol",
          "type": "command",
          "command": "editor.action.rename"
        },
        {
          "key": "R",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor"
        },
        {
          "key": ".",
          "name": "Quick fix",
          "type": "command",
          "command": "editor.action.quickFix"
        },
        {
          "key": "a",
          "name": "Find all references",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "u",
          "name": "To lower case",
          "type": "command",
          "command": "editor.action.transformToLowercase"
        },
        {
          "key": "U",
          "name": "To upper case",
          "type": "command",
          "command": "editor.action.transformToUppercase"
        },
        {
          "key": "J",
          "name": "Move lines down transient",
          "type": "commands",
          "commands": [
            "editor.action.moveLinesDownAction",
            "whichkey.showTransient"
          ],
          "args": [
            null,
            "whichkey.transient.lineMoving"
          ]
        },
        {
          "key": "K",
          "name": "Move lines up transient",
          "type": "commands",
          "commands": [
            "editor.action.moveLinesUpAction",
            "whichkey.showTransient"
          ],
          "args": [
            null,
            "whichkey.transient.lineMoving"
          ]
        },
        {
          "key": "l",
          "name": "+Lines",
          "type": "bindings",
          "bindings": [
            {
              "key": "s",
              "name": "Sort lines in ascending order",
              "type": "command",
              "command": "editor.action.sortLinesAscending"
            },
            {
              "key": "S",
              "name": "Sort lines in descending order",
              "type": "command",
              "command": "editor.action.sortLinesDescending"
            },
            {
              "key": "d",
              "name": "Duplicate lines down",
              "type": "command",
              "command": "editor.action.copyLinesDownAction"
            },
            {
              "key": "D",
              "name": "Duplicate lines up",
              "type": "command",
              "command": "editor.action.copyLinesUpAction"
            }
          ]
        },
        {
          "key": "d",
          "name": "+Delete",
          "type": "bindings",
          "bindings": [
            {
              "key": "w",
              "name": "Delete trailing whitespace",
              "type": "command",
              "command": "editor.action.trimTrailingWhitespace"
            }
          ]
        },
        {
          "key": "m",
          "name": "+Merge conflict",
          "type": "bindings",
          "bindings": [
            {
              "key": "b",
              "name": "Accept both",
              "type": "command",
              "command": "merge-conflict.accept.both"
            },
            {
              "key": "c",
              "name": "Accept current",
              "type": "command",
              "command": "merge-conflict.accept.current"
            },
            {
              "key": "i",
              "name": "Accept incoming",
              "type": "command",
              "command": "merge-conflict.accept.incoming"
            },
            {
              "key": "B",
              "name": "Accept all both",
              "type": "command",
              "command": "merge-conflict.accept.all-both"
            },
            {
              "key": "C",
              "name": "Accept all current",
              "type": "command",
              "command": "merge-conflict.accept.all-current"
            },
            {
              "key": "I",
              "name": "Accept all incoming",
              "type": "command",
              "command": "merge-conflict.accept.all-incoming"
            },
            {
              "key": "s",
              "name": "Accept selection",
              "type": "command",
              "command": "merge-conflict.accept.selection"
            },
            {
              "key": "k",
              "name": "Compare current conflict",
              "type": "command",
              "command": "merge-conflict.compare"
            },
            {
              "key": "n",
              "name": "Next Conflict",
              "type": "command",
              "command": "merge-conflict.next"
            },
            {
              "key": "N",
              "name": "Previous Conflict",
              "type": "command",
              "command": "merge-conflict.previous"
            }
          ]
        }
      ]
    },
    {
      "key": "z",
      "name": "+Zoom/Fold",
      "type": "bindings",
      "bindings": [
        {
          "key": ".",
          "name": "+Fold",
          "type": "bindings",
          "bindings": [
            {
              "key": "a",
              "name": "Toggle: around a point",
              "type": "command",
              "command": "editor.toggleFold"
            },
            {
              "key": "c",
              "name": "Close: at a point",
              "type": "command",
              "command": "editor.fold"
            },
            {
              "key": "b",
              "name": "Close: all block comments",
              "type": "command",
              "command": "editor.foldAllBlockComments"
            },
            {
              "key": "g",
              "name": "Close: all regions",
              "type": "command",
              "command": "editor.foldAllMarkerRegions"
            },
            {
              "key": "m",
              "name": "Close: all",
              "type": "command",
              "command": "editor.foldAll"
            },
            {
              "key": "o",
              "name": "Open: at a point",
              "type": "command",
              "command": "editor.unfold"
            },
            {
              "key": "O",
              "name": "Open: recursively",
              "type": "command",
              "command": "editor.unfoldRecursively"
            },
            {
              "key": "G",
              "name": "Open: all regions",
              "type": "command",
              "command": "editor.unfoldAllMarkerRegions"
            },
            {
              "key": "r",
              "name": "Open: all",
              "type": "command",
              "command": "editor.unfoldAll"
            }
          ]
        },
        {
          "key": "f",
          "name": "Frame zooming transient",
          "type": "command",
          "command": "whichkey.showTransient",
          "args": "whichkey.transient.frameZooming"
        },
        {
          "key": "x",
          "name": "Font zooming transient",
          "type": "command",
          "command": "whichkey.showTransient",
          "args": "whichkey.transient.fontZooming"
        },
        {
          "key": "i",
          "name": "Image zooming transient",
          "type": "command",
          "command": "whichkey.showTransient",
          "args": "whichkey.transient.imageZooming"
        }
      ]
    },
    {
      "key": "!",
      "name": "Show terminal",
      "type": "command",
      "command": "workbench.action.terminal.focus"
    },
    {
      "key": "/",
      "name": "Search in a project",
      "type": "command",
      "command": "workbench.action.findInFiles"
    },
    {
      "key": "*",
      "name": "Search in a project with a selection",
      "type": "commands",
      "commands": [
        "editor.action.addSelectionToNextFindMatch",
        "workbench.action.findInFiles"
      ]
    },
    {
      "key": "v",
      "name": "Smart select/expand region transient",
      "type": "commands",
      "commands": [
        "editor.action.smartSelect.grow",
        "whichkey.showTransient"
      ],
      "args": [
        null,
        "whichkey.transient.smartExpand"
      ]
    },
    {
      "key": "1",
      "name": "Focus 1st editor group",
      "type": "command",
      "command": "workbench.action.focusFirstEditorGroup"
    },
    {
      "key": "2",
      "name": "Focus 2nd editor group",
      "type": "command",
      "command": "workbench.action.focusSecondEditorGroup"
    },
    {
      "key": "3",
      "name": "Focus 3rd editor group",
      "type": "command",
      "command": "workbench.action.focusThirdEditorGroup"
    },
    {
      "key": "4",
      "name": "Focus 4th editor group",
      "type": "command",
      "command": "workbench.action.focusFourthEditorGroup"
    },
    {
      "key": "5",
      "name": "Focus 5th editor group",
      "type": "command",
      "command": "workbench.action.focusFifthEditorGroup"
    },
    {
      "key": "6",
      "name": "Focus 6th editor group",
      "type": "command",
      "command": "workbench.action.focusSixthEditorGroup"
    },
    {
      "key": "7",
      "name": "Focus 7th editor group",
      "type": "command",
      "command": "workbench.action.focusSeventhEditorGroup"
    },
    {
      "key": "8",
      "name": "Focus 8th editor group",
      "type": "command",
      "command": "workbench.action.focusEighthEditorGroup"
    }
  ],
  "json.schemas": [
  
  



  
  ],
  "tabnine.experimentalAutoImports": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "window.zoomLevel": -2
}
